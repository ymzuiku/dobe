var m=Object.defineProperty,I=Object.defineProperties,R=Object.getOwnPropertyDescriptor,A=Object.getOwnPropertyDescriptors,C=Object.getOwnPropertyNames,T=Object.getOwnPropertySymbols;var O=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var d=(t,r,e)=>r in t?m(t,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[r]=e,y=(t,r)=>{for(var e in r||(r={}))O.call(r,e)&&d(t,e,r[e]);if(T)for(var e of T(r))E.call(r,e)&&d(t,e,r[e]);return t},w=(t,r)=>I(t,A(r));var q=(t,r)=>{for(var e in r)m(t,e,{get:r[e],enumerable:!0})},F=(t,r,e,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let o of C(r))!O.call(t,o)&&o!==e&&m(t,o,{get:()=>r[o],enumerable:!(n=R(r,o))||n.enumerable});return t};var L=t=>F(m({},"__esModule",{value:!0}),t);var h=(t,r,e)=>new Promise((n,o)=>{var c=s=>{try{l(e.next(s))}catch(u){o(u)}},a=s=>{try{l(e.throw(s))}catch(u){o(u)}},l=s=>s.done?n(s.value):Promise.resolve(s.value).then(c,a);l((e=e.apply(t,r)).next())});var U={};q(U,{createFastifyController:()=>P,dobe:()=>f,fetcher:()=>i});module.exports=L(U);var P=t=>(r,e)=>(r.method==="GET"?t.get(r.url,n=>r(n.query,e)):t[r.method.toLocaleLowerCase()](r.url,n=>r(JSON.parse(n.body),e)),e);function b(t){let r=t.status;return r>=200&&r<=299?t.json():t.json().then(e=>{throw typeof e=="object"?e.message?new Error(e.message):e:new Error(e)})}var i=(t,r,e)=>{let n=y({method:r.method},e);if(r.method==="GET"){let o=new URLSearchParams(t).toString();return fetch(i.baseURL+r.url+"?"+o,n).then(b)}return fetch(i.baseURL+r.url,w(y({},n),{body:JSON.stringify(t)})).then(b)};i.baseURL="";var p=(t,r)=>h(void 0,null,function*(){return yield t.validate(r),t.cast(r,{stripUnknown:!0})});var x=({method:t,requestSchema:r,responseSchema:e,url:n})=>{let o=(c,a,l)=>h(void 0,null,function*(){if(a=a||f.baseFetcher,!a)throw new Error("Not found fetcher: "+o.url);if(r)try{c=yield Promise.resolve(f.baseDtoValidate(r,c))}catch(u){throw f.onRequireError(u),u}let s=yield a(c,o,l);return e?f.baseDtoValidate(e,s):s});return o.requestSchema=r,o.responseSchema=e,o.url=n,o.method=t,o.TypeOfRequest={},o.TypeOfResponse={},o},D=(t,r,e)=>{if(e=e||f.baseController,!e)throw new Error("Not found controller: "+t.url);return e(t,r)},f={api:x,use:D,baseDtoValidate:p,baseFetcher:i,onRequireError:t=>{},baseController:void 0};
